// Auto-generated database types
// This file will be generated by: supabase gen types typescript --local > supabase/types/database.types.ts

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      groups: {
        Row: {
          id: string
          user_id: string
          name: string
          description: string | null
          archived: boolean
          archived_at: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          name: string
          description?: string | null
          archived?: boolean
          archived_at?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          name?: string
          description?: string | null
          archived?: boolean
          archived_at?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "groups_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      tags: {
        Row: {
          id: string
          user_id: string
          name: string
          description: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          user_id: string
          name: string
          description?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          name?: string
          description?: string | null
          created_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "tags_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      fx_rates: {
        Row: {
          rate_date: string
          usd_per_thb: number
          thb_per_usd: number
          manual: boolean
          fetched_at: string
        }
        Insert: {
          rate_date: string
          usd_per_thb: number
          thb_per_usd: number
          manual?: boolean
          fetched_at?: string
        }
        Update: {
          rate_date?: string
          usd_per_thb?: number
          thb_per_usd?: number
          manual?: boolean
          fetched_at?: string
        }
        Relationships: []
      }
      spends: {
        Row: {
          id: string
          user_id: string
          item: string
          amount: number
          currency: 'THB' | 'USD'
          merchant: string | null
          group_id: string | null
          tag_id: string | null
          created_at: string
          user_local_datetime: string
          fx_rate_date: string
          archived: boolean
          archived_at: string | null
        }
        Insert: {
          id?: string
          user_id: string
          item: string
          amount: number
          currency: 'THB' | 'USD'
          merchant?: string | null
          group_id?: string | null
          tag_id?: string | null
          created_at?: string
          user_local_datetime?: string
          fx_rate_date: string
          archived?: boolean
          archived_at?: string | null
        }
        Update: {
          id?: string
          user_id?: string
          item?: string
          amount?: number
          currency?: 'THB' | 'USD'
          merchant?: string | null
          group_id?: string | null
          tag_id?: string | null
          created_at?: string
          user_local_datetime?: string
          fx_rate_date?: string
          archived?: boolean
          archived_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "spends_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "spends_group_id_fkey"
            columns: ["group_id"]
            referencedRelation: "groups"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "spends_tag_id_fkey"
            columns: ["tag_id"]
            referencedRelation: "tags"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "spends_fx_rate_date_fkey"
            columns: ["fx_rate_date"]
            referencedRelation: "fx_rates"
            referencedColumns: ["rate_date"]
          }
        ]
      }
      user_settings: {
        Row: {
          user_id: string
          main_currency: 'THB' | 'USD'
          include_archived_analytics: boolean
          updated_at: string
        }
        Insert: {
          user_id: string
          main_currency?: 'THB' | 'USD'
          include_archived_analytics?: boolean
          updated_at?: string
        }
        Update: {
          user_id?: string
          main_currency?: 'THB' | 'USD'
          include_archived_analytics?: boolean
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "user_settings_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      model_runs: {
        Row: {
          id: string
          user_id: string
          provider: string
          model: string
          input: Json
          output: Json
          cost: number | null
          created_at: string
        }
        Insert: {
          id?: string
          user_id: string
          provider: string
          model: string
          input: Json
          output: Json
          cost?: number | null
          created_at?: string
        }
        Update: {
          id?: string
          user_id?: string
          provider?: string
          model?: string
          input?: Json
          output?: Json
          cost?: number | null
          created_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "model_runs_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
    }
    Views: {
      spends_with_conversions: {
        Row: {
          id: string
          user_id: string
          item: string
          amount: number
          currency: 'THB' | 'USD'
          merchant: string | null
          group_id: string | null
          tag_id: string | null
          created_at: string
          user_local_datetime: string
          fx_rate_date: string
          archived: boolean
          archived_at: string | null
          amount_thb: number
          amount_usd: number
          group_name: string | null
          tag_name: string | null
          thb_per_usd: number
          usd_per_thb: number
        }
      }
      daily_spending_summary: {
        Row: {
          user_id: string
          spend_date: string
          currency: 'THB' | 'USD'
          transaction_count: number
          total_amount: number
          total_thb: number
          total_usd: number
        }
      }
      group_spending_summary: {
        Row: {
          user_id: string
          group_id: string | null
          group_name: string | null
          transaction_count: number
          total_thb: number
          total_usd: number
          avg_thb: number
          avg_usd: number
          first_spend: string
          last_spend: string
        }
      }
    }
    Functions: {
      handle_new_user: {
        Args: Record<PropertyKey, never>
        Returns: undefined
      }
      get_user_settings: {
        Args: Record<PropertyKey, never>
        Returns: Database["public"]["Tables"]["user_settings"]["Row"]
      }
      update_user_settings: {
        Args: {
          new_main_currency?: 'THB' | 'USD'
          new_include_archived?: boolean
        }
        Returns: Database["public"]["Tables"]["user_settings"]["Row"]
      }
      get_spending_summary: {
        Args: {
          start_date: string
          end_date: string
          include_archived?: boolean
        }
        Returns: {
          total_transactions: number
          total_thb: number
          total_usd: number
          avg_thb: number
          avg_usd: number
          currency_breakdown: Json
          top_groups: Json
          daily_totals: Json
        }[]
      }
      get_group_breakdown: {
        Args: {
          start_date: string
          end_date: string
          include_archived?: boolean
        }
        Returns: {
          group_id: string | null
          group_name: string | null
          transaction_count: number
          total_thb: number
          total_usd: number
          percentage_of_total: number
        }[]
      }
      user_owns_group: {
        Args: {
          group_uuid: string
        }
        Returns: boolean
      }
      user_owns_tag: {
        Args: {
          tag_uuid: string
        }
        Returns: boolean
      }
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}
